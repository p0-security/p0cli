on:
  pull_request:
    branches: [main]
  # release:
  #   types: [created]

name: Build Standalone CLI

jobs:
  build_macos:
    name: Build CLI on MacOS
    runs-on: macos-latest
    env:
      APPLE_APP_STORE_CONNECT_KEY_ID: ${{ secrets.APPLE_APP_STORE_CONNECT_KEY_ID }}
      APPLE_APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APPLE_APP_STORE_CONNECT_ISSUER_ID }}
      APPLE_CODESIGN_CERT_NAME: "Developer ID Application: P0 Security, Inc. (FFR8KSH76M)"
      APPLE_INSTALLER_CERT_NAME: "Developer ID Installer: P0 Security, Inc. (FFR8KSH76M)"
      VERSION: 0.18.9
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: |
            yarn.lock
      - name: Setup environment variables
        run: |
          KEYCHAIN_PASSWORD=$(openssl rand -hex 32)
          echo "::add-mask::$KEYCHAIN_PASSWORD"
          echo "KEYCHAIN_PASSWORD=$KEYCHAIN_PASSWORD" >> "$GITHUB_ENV"
      - name: Import certificates and setup Keychain
        run: |
          echo "${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE_BASE64 }}" | base64 --decode > codesign_certificate.p12
          echo "${{ secrets.APPLE_DEVELOPER_ID_INSTALLER_CERT_BASE64 }}" | base64 --decode > installer_certificate.p12
          echo "${{ secrets.APPLE_APP_STORE_CONNECT_PRIVATE_KEY_BASE64 }}" | base64 --decode > app_store_connect_private_key.p8

          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain

          security import codesign_certificate.p12 -k build.keychain -P "${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security import installer_certificate.p12 -k build.keychain -P "${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE_PASSWORD }}" -T /usr/bin/pkgbuild
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
      - name: Yarn install
        run: yarn install
      - name: Build
        run: |
          yarn build:macos
          ./mac/build-macOS.sh
      - name: Codesign binary
        run: |
          codesign --verbose=4 --remove-signature build/sea/p0
          codesign --verbose=4 --timestamp --entitlements ./mac/entitlements.plist --options runtime --sign "${{ env.APPLE_CODESIGN_CERT_NAME }}" --keychain "build.keychain" build/sea/p0
      - name: Package application
        run: |
          mkdir -p build/sea/root/usr/local/bin
          cp build/sea/p0 build/sea/root/usr/local/bin/p0
          pkgbuild --identifier dev.p0.cli --version "${{ env.VERSION }}" --install-location / --sign "${{ env.APPLE_INSTALLER_CERT_NAME }}" --keychain "build.keychain" --root build/sea/root build/sea/p0-macOS-${{ env.VERSION }}.pkg
      - name: Notarize build artifact
        run: |
          xcrun notarytool submit build/sea/p0-macOS-${{ env.VERSION }}.pkg --key app_store_connect_private_key.p8 --key-id "$APPLE_APP_STORE_CONNECT_KEY_ID" --issuer "$APPLE_APP_STORE_CONNECT_ISSUER_ID" --wait --verbose
          xcrun stapler staple build/sea/p0-macOS-${{ env.VERSION }}.pkg
      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: p0-macOS-${{ env.VERSION }}
          path: build/sea/p0-macOS-${{ env.VERSION }}.pkg
      # - name: Upload artifact to release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: build/sea/p0-macOS-${{ env.VERSION }}.pkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup keychain
        run: |
          security delete-keychain build.keychain
  build_windows:
    name: Build CLI on Windows
    runs-on: windows-latest
    env:
      SSL_COM_USERNAME: ${{ secrets.SSL_COM_USERNAME }}
      SSL_COM_PASSWORD: ${{ secrets.SSL_COM_PASSWORD }}
      SSL_COM_TOTP_SECRET: ${{ secrets.SSL_COM_TOTP_SECRET }}
      SSL_COM_CREDENTIAL_ID: ${{ secrets.SSL_COM_CREDENTIAL_ID }}
      VERSION: 0.18.9
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: |
            yarn.lock
      - uses: KamaranL/add-signtool-action@v1
      - name: Yarn install
        run: yarn install
      - name: Build
        run: |
          yarn build:windows
          .\win\build-windows.bat
      - name: Sign binary
        uses: sslcom/esigner-codesign@b7f8ff36fc0de8690fbbab8e5b4421d29802f747
        with:
          username: ${{ env.SSL_COM_USERNAME }}
          password: ${{ env.SSL_COM_PASSWORD }}
          totp_secret: ${{ env.SSL_COM_TOTP_SECRET }}
          credential_id: ${{ env.SSL_COM_CREDENTIAL_ID }}
          file_path: ${{ github.workspace }}\build\sea\p0.exe
          override: true
          command: sign
      - name: Package application
        run: |
          node .\win\preprocess-wxs.cjs
          candle .\win\p0.wxs -o build\sea\installer.wixobj
          light build\sea\installer.wixobj -o build\sea\p0-windows-${{ env.VERSION }}.msi -ext WixUIExtension -ext WixUtilExtension -cultures:en-us
      - name: Sign installer
        uses: sslcom/esigner-codesign@b7f8ff36fc0de8690fbbab8e5b4421d29802f747
        with:
          username: ${{ env.SSL_COM_USERNAME }}
          password: ${{ env.SSL_COM_PASSWORD }}
          totp_secret: ${{ env.SSL_COM_TOTP_SECRET }}
          credential_id: ${{ env.SSL_COM_CREDENTIAL_ID }}
          file_path: ${{ github.workspace }}\build\sea\p0-windows-${{ env.VERSION }}.msi
          override: true
          command: sign
      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: p0-windows-${{ env.VERSION }}
          path: build\sea\p0-windows-${{ env.VERSION }}.msi
      # - name: Upload artifact to release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: build/sea/p0-windows-${{ env.VERSION }}.msi
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
